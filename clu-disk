#!/bin/bash

#  Copyright 2008 Simon HÃ¼rlimann <simon.huerlimann@cyt.ch>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

set -e

# Commandline Parsing
# ===================
NODE1=$(hostname -f)
NODE2=$1

function usage() {
	echo "Usage: $(basename $0) create <SECONDARY> <RESOURCE> [<DEVICE> <PORT> <SIZE> <LVM_VG>]"
	echo "                      destroy <RESOURCE>"
	exit 0
}
if [ $# -lt 2 ] ; then
	usage
fi


 
ACTION=${1:list}

function get_ip() {
local name=$1

	host $name | cut -d ' ' -f 4
}

# Create disk
function create() {
local primary=$(hostname --fqdn)
local secondary=$2
local resource=$3
local device=${4:-drbd0}
local port=${5:-7788}
local size=${6:-1G}
local lvm_vg=${7:-$(hostname --short)}

        # Create logical volume
        lvcreate --size $size --name $resource $lvm_vg

        # Add DRBD ressource config snipple
        cat >>/etc/drbd.conf <<EOF
##### Autogenerated section '$resource' by clu-tools #####
resource "$resource" {
	protocol C;
	net {
		allow-two-primaries;
	}

        on $primary {
        	address $(get_ip $primary):$port;
                disk /dev/$lvm_vg/$resource;
                device /dev/$device;
                meta-disk "internal";
        }
        on $secondary {
        	address $(get_ip $secondary):$port;
	        disk /dev/$lvm_vg/$resource;
                device /dev/$device;
                meta-disk "internal";
        }
}
##### End section '$resource' #####
EOF

	# Activate drbd
	drbdadm create-md $resource
        drbdadm up $resource

	# Check if there's a primary already
	(drbdadm state $resource 2>/dev/null | grep Primary >/dev/null) || drbdadm -- --overwrite-data-of-peer primary $resource
}

function cut_section() {
local resource=$1

	cat /etc/drbd.conf | awk -f /usr/local/bin/clu-tools/cut_section.awk -v resource=$resource >/etc/drbd.conf
}

function extract_section() {
local resource=$1

	cat /etc/drbd.conf | awk -f /usr/local/bin/clu-tools/extract_section.awk -v resource=$resource
}


function extract_disk() {
local resource=$1

        extract_section $resource | sed -n 's#[^#]*[[:space:]]disk[[:space:]]*\(/dev/[^;]*\);.*#\1#p'
}
        
        
function destroy() {
local resource=$2

	drbdadm down $resource

	lvremove $(extract_disk $resource)

	cut_section $resource
}

# Main
# ====
$ACTION $@
