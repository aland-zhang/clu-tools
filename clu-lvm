#!/bin/bash

#  Copyright 2008 Simon HÃ¼rlimann <simon.huerlimann@cyt.ch>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

set -e

# Commandline Parsing
# ===================
NODE1=$(hostname -f)
NODE2=$1

# Commands
# ========
function usage() {
	echo "Usage: $(basename $0) clone <LOGICAL_VOLUME> <SECONDARY> [<VOLUME_GROUP>]"
	echo "       $(basename $0) grow_to <LOGICAL_VOLUME_PATH> <NEW_SIZE in Bytes>"
	echo "       $(basename $0) grow_by <LOGICAL_VOLUME_PATH> <ADDITIONAL_SIZE in Bytes>"
	echo

	exit 0
}
if [ $# -lt 2 ] ; then
	usage
fi


 
function clone() {
local lv=$1
local secondary=$2
local vg=$3

	local extents=$(lvdisplay $lv | grep 'Current LE' | awk '{print $3}')
	local lv_name=$(basename $lv)

	ssh $secondary "lvcreate --name $lv_name --extents $extents ${vg:-\$(hostname -s)}"
}

function resize() {
local device=$1
local size=$2

	( lvresize --test --size $size $device >/dev/null 2>&1 )
	result=$?
	if [ $result == 3 ] ; then
		echo "[WARN] Logical volume $device is already $mb_size MB"
	elif [ $result != 0 ] ; then
		lvresize --test --size $size $device
		exit $?
	else
		lvresize --size $size $device
	fi
}

function grow_to() {
local device=$1
local new_size=$2

	local mb_size=$(( $new_size / ( 2 ** 20 ) ))

	resize "${mb_size}M"
}

function grow_by() {
local device=$1
local add_size=$2

	local mb_size=$(( $add_size / ( 2 ** 20 ) ))

	resize "+${mb_size}M"
}


# Main
# ====
ACTION=${1:lvdisplay}
shift

$ACTION $@
